/**
 * 文件使用方法，请参考：
 * 1. 将本文件放到module目录下
 * 2. 在module创建一个release.properties文件，复制下面内容到文件，并修改成自己的信息
 * 3. 执行"gradlew bintrayUpload " 开始上传lib包
#=======================================================================
#=======================project=======================
# 项目名称，通常与你模块的名称一致
project.name=andrutil
# 项目组ID，通常情况下如果你的包名为 com.example.test，那么项目组 ID 就是 com.example
project.groupId=com.reizx
# 项目ID，通常情况下如果你的包名为 com.example.test，那么项目 ID 就是 test
project.artifactId=andrutil
# 包类型，Android 库是 aar
project.packaging=aar
# 项目官方网站的地址，没有的话就用 Github 上的地址，例如：https://github.com/xiaopansky/Sketch
project.siteUrl=https://github.com/kigkrazy/andrutil
# 项目的 Git 地址，例如：https://github.com/xiaopansky/Sketch.git
project.gitUrl=https://github.com/kigkrazy/andrutil.git

#=======================javadoc=======================
# 生成的 javadoc 打开后主页显示的名称，通常跟项目名称一样即可
javadoc.name=andrutil

#=======================bintray=======================
# 你的 Bintray 的用户名
bintray.user=kigkrazy
# 你的的 Bintray 的 API Key
bintray.apikey=***************************
# 你的的 Bintray 的仓库名称
bintray.repo=reizxutils
# local 本地仓库发布位置，例如：c:\tmp
local.repo=reizxutils

#=======================developer=======================
# 通常是你在开源社区的昵称
developer.id=kigkrazy
# 你的姓名
developer.name=kigkrazy
# 你的邮箱
developer.email=kigkrazy@163.com
#=======================================================================
 *
 *
 * 参考：https://github.com/panpf/android-library-publish-to-jcenter
 */
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// load properties
Properties properties = new Properties()
//File localPropertiesFile = project.file("local.properties");
//if(localPropertiesFile.exists()){
//    properties.load(localPropertiesFile.newDataInputStream())
//}
//File projectPropertiesFile = project.file("project.properties");
//if(projectPropertiesFile.exists()){
//    properties.load(projectPropertiesFile.newDataInputStream())
//}

File releasePropertiesFile = project.file("release.properties");
if(releasePropertiesFile.exists()){
    properties.load(releasePropertiesFile.newDataInputStream())
}

// read properties
def projectName = properties.getProperty("project.name")
def projectGroupId = properties.getProperty("project.groupId")
def projectArtifactId = properties.getProperty("project.artifactId")
def projectVersionName = android.defaultConfig.versionName
def projectPackaging = properties.getProperty("project.packaging")
def projectSiteUrl = properties.getProperty("project.siteUrl")
def projectGitUrl = properties.getProperty("project.gitUrl")
def developerId = properties.getProperty("developer.id")
def developerName = properties.getProperty("developer.name")
def developerEmail = properties.getProperty("developer.email")
def bintrayUser = properties.getProperty("bintray.user")
def bintrayApikey = properties.getProperty("bintray.apikey")
def bintrayRepo = properties.getProperty("bintray.repo")

def localRepo = properties.getProperty("local.repo")
def javadocName = properties.getProperty("javadoc.name")

//region 生成本地发布的ARR包
/**
 * 要生成本的包，请执行：
 * gradlew uploadArchives
 */


apply plugin: 'maven'

// ext is a gradle closure allowing the declaration of global properties
ext {
    PUBLISH_GROUP_ID = 'com.reizx'
    PUBLISH_ARTIFACT_ID = 'andrutil'
    PUBLISH_VERSION = android.defaultConfig.versionName
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file("${rootDir}" + File.separator + ".."+ File.separator + "reizx-repo")
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId projectGroupId
            artifactId projectArtifactId
            version projectVersionName
        }
    }
}
// endregion


group = projectGroupId

// This generates POM.xml with proper parameters
install {
    repositories.mavenInstaller {
        pom {
            project {
                name projectName
                groupId projectGroupId
                artifactId projectArtifactId
                version projectVersionName
                packaging projectPackaging
                url projectSiteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection projectGitUrl
                    developerConnection projectGitUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

// This generates sources.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// Add compile dependencies to javadoc
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

// This generates javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    // mode by kigkrazy delete javaDoc gen
    //archives javadocJar
    archives sourcesJar
}

// javadoc configuration
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersionName
        links "http://docs.oracle.com/javase/7/docs/api"
        title javadocName
    }
}

// bintray configuration
bintray {
    user = bintrayUser
    key = bintrayApikey
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = projectName
        websiteUrl = projectSiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish = true
        version {
            released  = new Date()
            vcsTag = projectVersionName
        }
    }
}